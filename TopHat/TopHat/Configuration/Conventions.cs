using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;

namespace TopHat.Configuration
{
    public class Conventions
    {
        /// <summary>
        /// If set to true will always return tracked entities from queries
        /// </summary>
        public bool AlwaysTrackEntities { get; set; }

        /// <summary>
        /// Indicates that primary keys are generated by the database by default
        /// </summary>
        /// <remarks>Can be individually overridden</remarks>
        public bool PrimaryKeysDatabaseGeneratedByDefault { get; set; }

        /// <summary>
        /// Indicates that all foreign keys will have indexes generated on them to aid performance
        /// </summary>
        public bool GenerateIndexesOnForeignKeysByDefault { get; set; }

        /// <summary>
        /// If true all table names that aren't explicity set will be pluralised according to english rules
        /// </summary>
        public Func<Type, bool> PluraliseNamesByDefault { get; set; }

        /// <summary>
        /// Specifies the default decimal precision
        /// </summary>
        public Func<PropertyInfo, uint> DefaultDecimalPrecision { get; set; }

        /// <summary>
        /// Specifies the default decimal scale
        /// </summary>
        public Func<PropertyInfo, uint> DefaultDecimalScale { get; set; }

        /// <summary>
        /// Specifies the default string length
        /// </summary>
        public Func<PropertyInfo, uint> DefaultStringLength { get; set; }

        /// <summary>
        /// Specifies the default schema name
        /// </summary>
        public Func<Type, string> DefaultSchemaIdentifier { get; set; }

        /// <summary>
        /// Indicates how to identify the primary key of a particular type by convention
        /// </summary>
        public Func<PropertyInfo, bool> PrimaryKeyIdentifier { get; set; }
    }
}