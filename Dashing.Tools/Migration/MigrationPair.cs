namespace Dashing.Tools.Migration {
    using System.Linq;

    using Dashing.Configuration;

    public class MigrationPair {
        public IMap From { get; private set; }

        public IMap To { get; private set; }

        public bool RequiresUpdate() {
            var fromColumns = this.From.OwnedColumns(true).ToArray();
            var toColumns = this.To.OwnedColumns(true).ToArray();
            
            if (fromColumns.Length != toColumns.Length) {
                return true;
            }

            foreach (var fromColumn in fromColumns) {
                var toColumn = this.To.Columns[fromColumn.Name];

                if (toColumn == null) {
                    return true;
                }

                if (fromColumn.DbName != toColumn.DbName
                    || fromColumn.DbType != toColumn.DbType
                    || fromColumn.IsAutoGenerated != toColumn.IsAutoGenerated
                    || fromColumn.IsNullable != toColumn.IsNullable
                    || fromColumn.IsPrimaryKey != toColumn.IsPrimaryKey) {
                    return true;
                }

                if (this.To.Configuration.Engine.SqlDialect.TypeTakesLength(fromColumn.DbType) 
                    && fromColumn.Length != toColumn.Length) {
                    return true;
                }

                if (this.To.Configuration.Engine.SqlDialect.TypeTakesPrecisionAndScale(fromColumn.DbType)
                    && (fromColumn.Scale != toColumn.Scale || fromColumn.Precision != toColumn.Precision)) {
                    return true;
                }
            }

            return false;
        }

        public static MigrationPair Of(IMap from, IMap to) {
            return new MigrationPair { From = @from, To = to };
        }
    }
}