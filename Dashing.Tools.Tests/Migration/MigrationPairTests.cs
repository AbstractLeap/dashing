namespace Dashing.Tools.Tests.Migration {
    using System;
    using System.Collections.Generic;
    using System.Data;

    using Dashing.Configuration;
    using Dashing.Tools.Migration;
    using Dashing.Tools.Tests.TestDomain;

    using Xunit;

    public class MigrationPairTests {
        [Fact]
        public void MatchingMapsDontRequireMigration() {
            var from = this.GenerateMap();
            var to = this.GenerateMap();

            var target = MigrationPair.Of(from, to);

            Assert.False(target.RequiresUpdate());
        }

        [Fact]
        public void DifferentDbNameRequiresMigration() {
            this.AssertRequiresUpdate(to => to.Property(p => p.PostId).DbName = "foo");
        }

        [Fact]
        public void DifferentDbTypeRequiresMigration() {
            this.AssertRequiresUpdate(to => to.Property(p => p.PostId).DbType = DbType.Guid);
        }

        [Fact]
        public void DifferentPrimaryKeyRequiresMigration() {
            this.AssertRequiresUpdate(to => to.Property(p => p.PostId).IsPrimaryKey = false);
        }

        [Fact]
        public void DifferentAutoGenerationRequiresMigration() {
            this.AssertRequiresUpdate(to => to.Property(p => p.PostId).IsAutoGenerated = false);
        }

        [Fact]
        public void DifferentNullableRequiresMigration() {
            this.AssertRequiresUpdate(to => to.Property(p => p.PostId).IsNullable = true);
        }

        private void AssertRequiresUpdate(Action<IMap<Post>> action) {
            var from = this.GenerateMap();
            var to = this.GenerateMap();
            action(to);

            var target = MigrationPair.Of(@from, to);

            Assert.True(target.RequiresUpdate());
        }

        private IMap<Post> GenerateMap() {
            var map = new Map<Post> {
                Table = "Posts", 
                Schema = null, 
            };

            var columns = new Dictionary<string, IColumn> {
                { "PostId", new Column<int> {
                    Name = "PostId", 
                    DbName = "PostId", 
                    DbType = DbType.Int32, 
                    Map = map, 
                    IsPrimaryKey = true, 
                    IsAutoGenerated = true, 
                    IsNullable = false
                } }
            };

            map.Columns = columns;
            map.PrimaryKey = columns["PostId"];
            return map;
        }
    }
}